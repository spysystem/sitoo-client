<?php
/**
 * OrderAdditionaldataRead
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Spy\SitooClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API Documentation for Sitoo
 *
 * Client for integrating to Sitoo
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Spy\SitooClient\Model;

use \ArrayAccess;
use \Spy\SitooClient\ObjectSerializer;

/**
 * OrderAdditionaldataRead Class Doc Comment
 *
 * @category Class
 * @description Additional data for this order. The defined properties can be generated by Sitoo, any other properties are allowed as long as their values are of type string.
 * @package  Spy\SitooClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class OrderAdditionaldataRead implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * Return an object with the Model Fields
      *
      * @return OrderAdditionaldataReadModelFields
      */
    public static function GetModelFields(): OrderAdditionaldataReadModelFields
    {
        return new OrderAdditionaldataReadModelFields();
    }

    /**
      * Return an object with the Model Attributes
      *
      * @return OrderAdditionaldataReadModelAttributes
      */
    public static function GetModelAttributes(): OrderAdditionaldataReadModelAttributes
    {
        return new OrderAdditionaldataReadModelAttributes();
    }

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'order-additionaldata-read';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'crmCustomerid' => 'string',
        'crmMembernumber' => 'string',
        'customcrmContactid' => 'string',
        'customcrmMembernumber' => 'string',
        'deliveryIgnoreStock' => 'string',
        'deliveryPickupExternalid' => 'string',
        'deliveryPickupWarehouseid' => 'string',
        'influencerInfluencercode' => 'string',
        'influencerInfluencername' => 'string',
        'posOriginalsalesOrderid' => 'string',
        'posReceiptid' => 'string',
        'posRefundsalesOrderid' => 'string',
        'posRefundOrderid' => 'string',
        'posRefundReceiptid' => 'string',
        'posSourceorderid' => 'string',
        'posStaffUserid' => 'string',
        'posStaffExternalid' => 'string',
        'posStaff2Externalid' => 'string',
        'posStaffsalesUserid' => 'string',
        'posStaffsalesExternalid' => 'string',
        'posStaffsalesName' => 'string',
        'posTimezone' => 'string',
        'refundreasoncodeComment' => 'string',
        'refundreasoncodeReasoncode' => 'string',
        'serviceorderId' => 'string',
        'storeExternalid' => 'string',
        'storeExternalgroupid' => 'string',
        'storeName' => 'string',
        'voyadoContactid' => 'string',
        'voyadoMembernumber' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'crmCustomerid' => null,
        'crmMembernumber' => null,
        'customcrmContactid' => null,
        'customcrmMembernumber' => null,
        'deliveryIgnoreStock' => null,
        'deliveryPickupExternalid' => null,
        'deliveryPickupWarehouseid' => null,
        'influencerInfluencercode' => null,
        'influencerInfluencername' => null,
        'posOriginalsalesOrderid' => null,
        'posReceiptid' => null,
        'posRefundsalesOrderid' => null,
        'posRefundOrderid' => null,
        'posRefundReceiptid' => null,
        'posSourceorderid' => null,
        'posStaffUserid' => null,
        'posStaffExternalid' => null,
        'posStaff2Externalid' => null,
        'posStaffsalesUserid' => null,
        'posStaffsalesExternalid' => null,
        'posStaffsalesName' => null,
        'posTimezone' => null,
        'refundreasoncodeComment' => null,
        'refundreasoncodeReasoncode' => null,
        'serviceorderId' => null,
        'storeExternalid' => null,
        'storeExternalgroupid' => null,
        'storeName' => null,
        'voyadoContactid' => null,
        'voyadoMembernumber' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'crmCustomerid' => false,
		'crmMembernumber' => false,
		'customcrmContactid' => false,
		'customcrmMembernumber' => false,
		'deliveryIgnoreStock' => false,
		'deliveryPickupExternalid' => false,
		'deliveryPickupWarehouseid' => false,
		'influencerInfluencercode' => false,
		'influencerInfluencername' => false,
		'posOriginalsalesOrderid' => false,
		'posReceiptid' => false,
		'posRefundsalesOrderid' => false,
		'posRefundOrderid' => false,
		'posRefundReceiptid' => false,
		'posSourceorderid' => false,
		'posStaffUserid' => false,
		'posStaffExternalid' => false,
		'posStaff2Externalid' => false,
		'posStaffsalesUserid' => false,
		'posStaffsalesExternalid' => false,
		'posStaffsalesName' => false,
		'posTimezone' => false,
		'refundreasoncodeComment' => false,
		'refundreasoncodeReasoncode' => false,
		'serviceorderId' => false,
		'storeExternalid' => false,
		'storeExternalgroupid' => false,
		'storeName' => false,
		'voyadoContactid' => false,
		'voyadoMembernumber' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'crmCustomerid' => 'crm-customerid',
        'crmMembernumber' => 'crm-membernumber',
        'customcrmContactid' => 'customcrm-contactid',
        'customcrmMembernumber' => 'customcrm-membernumber',
        'deliveryIgnoreStock' => 'delivery-ignore-stock',
        'deliveryPickupExternalid' => 'delivery-pickup-externalid',
        'deliveryPickupWarehouseid' => 'delivery-pickup-warehouseid',
        'influencerInfluencercode' => 'influencer-influencercode',
        'influencerInfluencername' => 'influencer-influencername',
        'posOriginalsalesOrderid' => 'pos-originalsales-orderid',
        'posReceiptid' => 'pos-receiptid',
        'posRefundsalesOrderid' => 'pos-refundsales-orderid',
        'posRefundOrderid' => 'pos-refund-orderid',
        'posRefundReceiptid' => 'pos-refund-receiptid',
        'posSourceorderid' => 'pos-sourceorderid',
        'posStaffUserid' => 'pos-staff-userid',
        'posStaffExternalid' => 'pos-staff-externalid',
        'posStaff2Externalid' => 'pos-staff2-externalid',
        'posStaffsalesUserid' => 'pos-staffsales-userid',
        'posStaffsalesExternalid' => 'pos-staffsales-externalid',
        'posStaffsalesName' => 'pos-staffsales-name',
        'posTimezone' => 'pos-timezone',
        'refundreasoncodeComment' => 'refundreasoncode-comment',
        'refundreasoncodeReasoncode' => 'refundreasoncode-reasoncode',
        'serviceorderId' => 'serviceorder-id',
        'storeExternalid' => 'store-externalid',
        'storeExternalgroupid' => 'store-externalgroupid',
        'storeName' => 'store-name',
        'voyadoContactid' => 'voyado-contactid',
        'voyadoMembernumber' => 'voyado-membernumber'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'crmCustomerid' => 'setCrmCustomerid',
        'crmMembernumber' => 'setCrmMembernumber',
        'customcrmContactid' => 'setCustomcrmContactid',
        'customcrmMembernumber' => 'setCustomcrmMembernumber',
        'deliveryIgnoreStock' => 'setDeliveryIgnoreStock',
        'deliveryPickupExternalid' => 'setDeliveryPickupExternalid',
        'deliveryPickupWarehouseid' => 'setDeliveryPickupWarehouseid',
        'influencerInfluencercode' => 'setInfluencerInfluencercode',
        'influencerInfluencername' => 'setInfluencerInfluencername',
        'posOriginalsalesOrderid' => 'setPosOriginalsalesOrderid',
        'posReceiptid' => 'setPosReceiptid',
        'posRefundsalesOrderid' => 'setPosRefundsalesOrderid',
        'posRefundOrderid' => 'setPosRefundOrderid',
        'posRefundReceiptid' => 'setPosRefundReceiptid',
        'posSourceorderid' => 'setPosSourceorderid',
        'posStaffUserid' => 'setPosStaffUserid',
        'posStaffExternalid' => 'setPosStaffExternalid',
        'posStaff2Externalid' => 'setPosStaff2Externalid',
        'posStaffsalesUserid' => 'setPosStaffsalesUserid',
        'posStaffsalesExternalid' => 'setPosStaffsalesExternalid',
        'posStaffsalesName' => 'setPosStaffsalesName',
        'posTimezone' => 'setPosTimezone',
        'refundreasoncodeComment' => 'setRefundreasoncodeComment',
        'refundreasoncodeReasoncode' => 'setRefundreasoncodeReasoncode',
        'serviceorderId' => 'setServiceorderId',
        'storeExternalid' => 'setStoreExternalid',
        'storeExternalgroupid' => 'setStoreExternalgroupid',
        'storeName' => 'setStoreName',
        'voyadoContactid' => 'setVoyadoContactid',
        'voyadoMembernumber' => 'setVoyadoMembernumber'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'crmCustomerid' => 'getCrmCustomerid',
        'crmMembernumber' => 'getCrmMembernumber',
        'customcrmContactid' => 'getCustomcrmContactid',
        'customcrmMembernumber' => 'getCustomcrmMembernumber',
        'deliveryIgnoreStock' => 'getDeliveryIgnoreStock',
        'deliveryPickupExternalid' => 'getDeliveryPickupExternalid',
        'deliveryPickupWarehouseid' => 'getDeliveryPickupWarehouseid',
        'influencerInfluencercode' => 'getInfluencerInfluencercode',
        'influencerInfluencername' => 'getInfluencerInfluencername',
        'posOriginalsalesOrderid' => 'getPosOriginalsalesOrderid',
        'posReceiptid' => 'getPosReceiptid',
        'posRefundsalesOrderid' => 'getPosRefundsalesOrderid',
        'posRefundOrderid' => 'getPosRefundOrderid',
        'posRefundReceiptid' => 'getPosRefundReceiptid',
        'posSourceorderid' => 'getPosSourceorderid',
        'posStaffUserid' => 'getPosStaffUserid',
        'posStaffExternalid' => 'getPosStaffExternalid',
        'posStaff2Externalid' => 'getPosStaff2Externalid',
        'posStaffsalesUserid' => 'getPosStaffsalesUserid',
        'posStaffsalesExternalid' => 'getPosStaffsalesExternalid',
        'posStaffsalesName' => 'getPosStaffsalesName',
        'posTimezone' => 'getPosTimezone',
        'refundreasoncodeComment' => 'getRefundreasoncodeComment',
        'refundreasoncodeReasoncode' => 'getRefundreasoncodeReasoncode',
        'serviceorderId' => 'getServiceorderId',
        'storeExternalid' => 'getStoreExternalid',
        'storeExternalgroupid' => 'getStoreExternalgroupid',
        'storeName' => 'getStoreName',
        'voyadoContactid' => 'getVoyadoContactid',
        'voyadoMembernumber' => 'getVoyadoMembernumber'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('crmCustomerid', $data ?? [], null);
        $this->setIfExists('crmMembernumber', $data ?? [], null);
        $this->setIfExists('customcrmContactid', $data ?? [], null);
        $this->setIfExists('customcrmMembernumber', $data ?? [], null);
        $this->setIfExists('deliveryIgnoreStock', $data ?? [], null);
        $this->setIfExists('deliveryPickupExternalid', $data ?? [], null);
        $this->setIfExists('deliveryPickupWarehouseid', $data ?? [], null);
        $this->setIfExists('influencerInfluencercode', $data ?? [], null);
        $this->setIfExists('influencerInfluencername', $data ?? [], null);
        $this->setIfExists('posOriginalsalesOrderid', $data ?? [], null);
        $this->setIfExists('posReceiptid', $data ?? [], null);
        $this->setIfExists('posRefundsalesOrderid', $data ?? [], null);
        $this->setIfExists('posRefundOrderid', $data ?? [], null);
        $this->setIfExists('posRefundReceiptid', $data ?? [], null);
        $this->setIfExists('posSourceorderid', $data ?? [], null);
        $this->setIfExists('posStaffUserid', $data ?? [], null);
        $this->setIfExists('posStaffExternalid', $data ?? [], null);
        $this->setIfExists('posStaff2Externalid', $data ?? [], null);
        $this->setIfExists('posStaffsalesUserid', $data ?? [], null);
        $this->setIfExists('posStaffsalesExternalid', $data ?? [], null);
        $this->setIfExists('posStaffsalesName', $data ?? [], null);
        $this->setIfExists('posTimezone', $data ?? [], null);
        $this->setIfExists('refundreasoncodeComment', $data ?? [], null);
        $this->setIfExists('refundreasoncodeReasoncode', $data ?? [], null);
        $this->setIfExists('serviceorderId', $data ?? [], null);
        $this->setIfExists('storeExternalid', $data ?? [], null);
        $this->setIfExists('storeExternalgroupid', $data ?? [], null);
        $this->setIfExists('storeName', $data ?? [], null);
        $this->setIfExists('voyadoContactid', $data ?? [], null);
        $this->setIfExists('voyadoMembernumber', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets crmCustomerid
     *
     * @return string|null
     */
    public function getCrmCustomerid()
    {
        return $this->container['crmCustomerid'];
    }

    /**
     * Sets crmCustomerid
     *
     * @param string|null $crmCustomerid ID for the customer in the CRM system
     *
     * @return self
     */
    public function setCrmCustomerid($crmCustomerid)
    {

        if (is_null($crmCustomerid)) {
            throw new \InvalidArgumentException('non-nullable crmCustomerid cannot be null');
        }

        $this->container['crmCustomerid'] = $crmCustomerid;

        return $this;
    }

    /**
     * Gets crmMembernumber
     *
     * @return string|null
     */
    public function getCrmMembernumber()
    {
        return $this->container['crmMembernumber'];
    }

    /**
     * Sets crmMembernumber
     *
     * @param string|null $crmMembernumber Member Number for the customer in the CRM system
     *
     * @return self
     */
    public function setCrmMembernumber($crmMembernumber)
    {

        if (is_null($crmMembernumber)) {
            throw new \InvalidArgumentException('non-nullable crmMembernumber cannot be null');
        }

        $this->container['crmMembernumber'] = $crmMembernumber;

        return $this;
    }

    /**
     * Gets customcrmContactid
     *
     * @return string|null
     */
    public function getCustomcrmContactid()
    {
        return $this->container['customcrmContactid'];
    }

    /**
     * Sets customcrmContactid
     *
     * @param string|null $customcrmContactid ID of the customer
     *
     * @return self
     */
    public function setCustomcrmContactid($customcrmContactid)
    {

        if (is_null($customcrmContactid)) {
            throw new \InvalidArgumentException('non-nullable customcrmContactid cannot be null');
        }

        $this->container['customcrmContactid'] = $customcrmContactid;

        return $this;
    }

    /**
     * Gets customcrmMembernumber
     *
     * @return string|null
     */
    public function getCustomcrmMembernumber()
    {
        return $this->container['customcrmMembernumber'];
    }

    /**
     * Sets customcrmMembernumber
     *
     * @param string|null $customcrmMembernumber Member number for the customer
     *
     * @return self
     */
    public function setCustomcrmMembernumber($customcrmMembernumber)
    {

        if (is_null($customcrmMembernumber)) {
            throw new \InvalidArgumentException('non-nullable customcrmMembernumber cannot be null');
        }

        $this->container['customcrmMembernumber'] = $customcrmMembernumber;

        return $this;
    }

    /**
     * Gets deliveryIgnoreStock
     *
     * @return string|null
     */
    public function getDeliveryIgnoreStock()
    {
        return $this->container['deliveryIgnoreStock'];
    }

    /**
     * Sets deliveryIgnoreStock
     *
     * @param string|null $deliveryIgnoreStock A value of \"true\" indicates that deliveries for this order should not affect stock levels for the items in it.
     *
     * @return self
     */
    public function setDeliveryIgnoreStock($deliveryIgnoreStock)
    {

        if (is_null($deliveryIgnoreStock)) {
            throw new \InvalidArgumentException('non-nullable deliveryIgnoreStock cannot be null');
        }

        $this->container['deliveryIgnoreStock'] = $deliveryIgnoreStock;

        return $this;
    }

    /**
     * Gets deliveryPickupExternalid
     *
     * @return string|null
     */
    public function getDeliveryPickupExternalid()
    {
        return $this->container['deliveryPickupExternalid'];
    }

    /**
     * Sets deliveryPickupExternalid
     *
     * @param string|null $deliveryPickupExternalid External ID for the Warehouse where the pickup should be made
     *
     * @return self
     */
    public function setDeliveryPickupExternalid($deliveryPickupExternalid)
    {

        if (is_null($deliveryPickupExternalid)) {
            throw new \InvalidArgumentException('non-nullable deliveryPickupExternalid cannot be null');
        }

        $this->container['deliveryPickupExternalid'] = $deliveryPickupExternalid;

        return $this;
    }

    /**
     * Gets deliveryPickupWarehouseid
     *
     * @return string|null
     */
    public function getDeliveryPickupWarehouseid()
    {
        return $this->container['deliveryPickupWarehouseid'];
    }

    /**
     * Sets deliveryPickupWarehouseid
     *
     * @param string|null $deliveryPickupWarehouseid Warehouse ID where the pickup should be made
     *
     * @return self
     */
    public function setDeliveryPickupWarehouseid($deliveryPickupWarehouseid)
    {

        if (is_null($deliveryPickupWarehouseid)) {
            throw new \InvalidArgumentException('non-nullable deliveryPickupWarehouseid cannot be null');
        }

        $this->container['deliveryPickupWarehouseid'] = $deliveryPickupWarehouseid;

        return $this;
    }

    /**
     * Gets influencerInfluencercode
     *
     * @return string|null
     */
    public function getInfluencerInfluencercode()
    {
        return $this->container['influencerInfluencercode'];
    }

    /**
     * Sets influencerInfluencercode
     *
     * @param string|null $influencerInfluencercode Code used to activate influencer voucher
     *
     * @return self
     */
    public function setInfluencerInfluencercode($influencerInfluencercode)
    {

        if (is_null($influencerInfluencercode)) {
            throw new \InvalidArgumentException('non-nullable influencerInfluencercode cannot be null');
        }

        $this->container['influencerInfluencercode'] = $influencerInfluencercode;

        return $this;
    }

    /**
     * Gets influencerInfluencername
     *
     * @return string|null
     */
    public function getInfluencerInfluencername()
    {
        return $this->container['influencerInfluencername'];
    }

    /**
     * Sets influencerInfluencername
     *
     * @param string|null $influencerInfluencername Name of influencer
     *
     * @return self
     */
    public function setInfluencerInfluencername($influencerInfluencername)
    {

        if (is_null($influencerInfluencername)) {
            throw new \InvalidArgumentException('non-nullable influencerInfluencername cannot be null');
        }

        $this->container['influencerInfluencername'] = $influencerInfluencername;

        return $this;
    }

    /**
     * Gets posOriginalsalesOrderid
     *
     * @return string|null
     */
    public function getPosOriginalsalesOrderid()
    {
        return $this->container['posOriginalsalesOrderid'];
    }

    /**
     * Sets posOriginalsalesOrderid
     *
     * @param string|null $posOriginalsalesOrderid Order ID referring to the original purchase being returned
     *
     * @return self
     */
    public function setPosOriginalsalesOrderid($posOriginalsalesOrderid)
    {

        if (is_null($posOriginalsalesOrderid)) {
            throw new \InvalidArgumentException('non-nullable posOriginalsalesOrderid cannot be null');
        }

        $this->container['posOriginalsalesOrderid'] = $posOriginalsalesOrderid;

        return $this;
    }

    /**
     * Gets posReceiptid
     *
     * @return string|null
     */
    public function getPosReceiptid()
    {
        return $this->container['posReceiptid'];
    }

    /**
     * Sets posReceiptid
     *
     * @param string|null $posReceiptid Receipt ID for the purchase
     *
     * @return self
     */
    public function setPosReceiptid($posReceiptid)
    {

        if (is_null($posReceiptid)) {
            throw new \InvalidArgumentException('non-nullable posReceiptid cannot be null');
        }

        $this->container['posReceiptid'] = $posReceiptid;

        return $this;
    }

    /**
     * Gets posRefundsalesOrderid
     *
     * @return string|null
     */
    public function getPosRefundsalesOrderid()
    {
        return $this->container['posRefundsalesOrderid'];
    }

    /**
     * Sets posRefundsalesOrderid
     *
     * @param string|null $posRefundsalesOrderid Order ID referring to the purchase that was done in connection to this refund
     *
     * @return self
     */
    public function setPosRefundsalesOrderid($posRefundsalesOrderid)
    {

        if (is_null($posRefundsalesOrderid)) {
            throw new \InvalidArgumentException('non-nullable posRefundsalesOrderid cannot be null');
        }

        $this->container['posRefundsalesOrderid'] = $posRefundsalesOrderid;

        return $this;
    }

    /**
     * Gets posRefundOrderid
     *
     * @return string|null
     */
    public function getPosRefundOrderid()
    {
        return $this->container['posRefundOrderid'];
    }

    /**
     * Sets posRefundOrderid
     *
     * @param string|null $posRefundOrderid Order ID for the refund that was done in connection to this purchase
     *
     * @return self
     */
    public function setPosRefundOrderid($posRefundOrderid)
    {

        if (is_null($posRefundOrderid)) {
            throw new \InvalidArgumentException('non-nullable posRefundOrderid cannot be null');
        }

        $this->container['posRefundOrderid'] = $posRefundOrderid;

        return $this;
    }

    /**
     * Gets posRefundReceiptid
     *
     * @return string|null
     */
    public function getPosRefundReceiptid()
    {
        return $this->container['posRefundReceiptid'];
    }

    /**
     * Sets posRefundReceiptid
     *
     * @param string|null $posRefundReceiptid Receipt ID for the refund that was done in connection to this purchase
     *
     * @return self
     */
    public function setPosRefundReceiptid($posRefundReceiptid)
    {

        if (is_null($posRefundReceiptid)) {
            throw new \InvalidArgumentException('non-nullable posRefundReceiptid cannot be null');
        }

        $this->container['posRefundReceiptid'] = $posRefundReceiptid;

        return $this;
    }

    /**
     * Gets posSourceorderid
     *
     * @return string|null
     */
    public function getPosSourceorderid()
    {
        return $this->container['posSourceorderid'];
    }

    /**
     * Sets posSourceorderid
     *
     * @param string|null $posSourceorderid ID for the order that was the source for this purchase (Booking or POSParked)
     *
     * @return self
     */
    public function setPosSourceorderid($posSourceorderid)
    {

        if (is_null($posSourceorderid)) {
            throw new \InvalidArgumentException('non-nullable posSourceorderid cannot be null');
        }

        $this->container['posSourceorderid'] = $posSourceorderid;

        return $this;
    }

    /**
     * Gets posStaffUserid
     *
     * @return string|null
     */
    public function getPosStaffUserid()
    {
        return $this->container['posStaffUserid'];
    }

    /**
     * Sets posStaffUserid
     *
     * @param string|null $posStaffUserid User ID for the POS staff that handled the transaction
     *
     * @return self
     */
    public function setPosStaffUserid($posStaffUserid)
    {

        if (is_null($posStaffUserid)) {
            throw new \InvalidArgumentException('non-nullable posStaffUserid cannot be null');
        }

        $this->container['posStaffUserid'] = $posStaffUserid;

        return $this;
    }

    /**
     * Gets posStaffExternalid
     *
     * @return string|null
     */
    public function getPosStaffExternalid()
    {
        return $this->container['posStaffExternalid'];
    }

    /**
     * Sets posStaffExternalid
     *
     * @param string|null $posStaffExternalid External ID for the POS staff that handled the transaction
     *
     * @return self
     */
    public function setPosStaffExternalid($posStaffExternalid)
    {

        if (is_null($posStaffExternalid)) {
            throw new \InvalidArgumentException('non-nullable posStaffExternalid cannot be null');
        }

        $this->container['posStaffExternalid'] = $posStaffExternalid;

        return $this;
    }

    /**
     * Gets posStaff2Externalid
     *
     * @return string|null
     */
    public function getPosStaff2Externalid()
    {
        return $this->container['posStaff2Externalid'];
    }

    /**
     * Sets posStaff2Externalid
     *
     * @param string|null $posStaff2Externalid External ID for the POS staff that handled secondary authorization of the transaction
     *
     * @return self
     */
    public function setPosStaff2Externalid($posStaff2Externalid)
    {

        if (is_null($posStaff2Externalid)) {
            throw new \InvalidArgumentException('non-nullable posStaff2Externalid cannot be null');
        }

        $this->container['posStaff2Externalid'] = $posStaff2Externalid;

        return $this;
    }

    /**
     * Gets posStaffsalesUserid
     *
     * @return string|null
     */
    public function getPosStaffsalesUserid()
    {
        return $this->container['posStaffsalesUserid'];
    }

    /**
     * Sets posStaffsalesUserid
     *
     * @param string|null $posStaffsalesUserid User ID for the POS staff that is responsible for the sale (or refund)
     *
     * @return self
     */
    public function setPosStaffsalesUserid($posStaffsalesUserid)
    {

        if (is_null($posStaffsalesUserid)) {
            throw new \InvalidArgumentException('non-nullable posStaffsalesUserid cannot be null');
        }

        $this->container['posStaffsalesUserid'] = $posStaffsalesUserid;

        return $this;
    }

    /**
     * Gets posStaffsalesExternalid
     *
     * @return string|null
     */
    public function getPosStaffsalesExternalid()
    {
        return $this->container['posStaffsalesExternalid'];
    }

    /**
     * Sets posStaffsalesExternalid
     *
     * @param string|null $posStaffsalesExternalid External ID for the POS staff that is responsible for the sale (or refund)
     *
     * @return self
     */
    public function setPosStaffsalesExternalid($posStaffsalesExternalid)
    {

        if (is_null($posStaffsalesExternalid)) {
            throw new \InvalidArgumentException('non-nullable posStaffsalesExternalid cannot be null');
        }

        $this->container['posStaffsalesExternalid'] = $posStaffsalesExternalid;

        return $this;
    }

    /**
     * Gets posStaffsalesName
     *
     * @return string|null
     */
    public function getPosStaffsalesName()
    {
        return $this->container['posStaffsalesName'];
    }

    /**
     * Sets posStaffsalesName
     *
     * @param string|null $posStaffsalesName Name for the POS staff that is responsible for the sale (or refund)
     *
     * @return self
     */
    public function setPosStaffsalesName($posStaffsalesName)
    {

        if (is_null($posStaffsalesName)) {
            throw new \InvalidArgumentException('non-nullable posStaffsalesName cannot be null');
        }

        $this->container['posStaffsalesName'] = $posStaffsalesName;

        return $this;
    }

    /**
     * Gets posTimezone
     *
     * @return string|null
     */
    public function getPosTimezone()
    {
        return $this->container['posTimezone'];
    }

    /**
     * Sets posTimezone
     *
     * @param string|null $posTimezone The timezone for the POS that generated the transaction
     *
     * @return self
     */
    public function setPosTimezone($posTimezone)
    {

        if (is_null($posTimezone)) {
            throw new \InvalidArgumentException('non-nullable posTimezone cannot be null');
        }

        $this->container['posTimezone'] = $posTimezone;

        return $this;
    }

    /**
     * Gets refundreasoncodeComment
     *
     * @return string|null
     */
    public function getRefundreasoncodeComment()
    {
        return $this->container['refundreasoncodeComment'];
    }

    /**
     * Sets refundreasoncodeComment
     *
     * @param string|null $refundreasoncodeComment Comment for refund
     *
     * @return self
     */
    public function setRefundreasoncodeComment($refundreasoncodeComment)
    {

        if (is_null($refundreasoncodeComment)) {
            throw new \InvalidArgumentException('non-nullable refundreasoncodeComment cannot be null');
        }

        $this->container['refundreasoncodeComment'] = $refundreasoncodeComment;

        return $this;
    }

    /**
     * Gets refundreasoncodeReasoncode
     *
     * @return string|null
     */
    public function getRefundreasoncodeReasoncode()
    {
        return $this->container['refundreasoncodeReasoncode'];
    }

    /**
     * Sets refundreasoncodeReasoncode
     *
     * @param string|null $refundreasoncodeReasoncode Reason code for refund
     *
     * @return self
     */
    public function setRefundreasoncodeReasoncode($refundreasoncodeReasoncode)
    {

        if (is_null($refundreasoncodeReasoncode)) {
            throw new \InvalidArgumentException('non-nullable refundreasoncodeReasoncode cannot be null');
        }

        $this->container['refundreasoncodeReasoncode'] = $refundreasoncodeReasoncode;

        return $this;
    }

    /**
     * Gets serviceorderId
     *
     * @return string|null
     */
    public function getServiceorderId()
    {
        return $this->container['serviceorderId'];
    }

    /**
     * Sets serviceorderId
     *
     * @param string|null $serviceorderId ID of the service order being paid for
     *
     * @return self
     */
    public function setServiceorderId($serviceorderId)
    {

        if (is_null($serviceorderId)) {
            throw new \InvalidArgumentException('non-nullable serviceorderId cannot be null');
        }

        $this->container['serviceorderId'] = $serviceorderId;

        return $this;
    }

    /**
     * Gets storeExternalid
     *
     * @return string|null
     */
    public function getStoreExternalid()
    {
        return $this->container['storeExternalid'];
    }

    /**
     * Sets storeExternalid
     *
     * @param string|null $storeExternalid External ID for the store where the purchase was made
     *
     * @return self
     */
    public function setStoreExternalid($storeExternalid)
    {

        if (is_null($storeExternalid)) {
            throw new \InvalidArgumentException('non-nullable storeExternalid cannot be null');
        }

        $this->container['storeExternalid'] = $storeExternalid;

        return $this;
    }

    /**
     * Gets storeExternalgroupid
     *
     * @return string|null
     */
    public function getStoreExternalgroupid()
    {
        return $this->container['storeExternalgroupid'];
    }

    /**
     * Sets storeExternalgroupid
     *
     * @param string|null $storeExternalgroupid External Group ID for the store where the purchase was made
     *
     * @return self
     */
    public function setStoreExternalgroupid($storeExternalgroupid)
    {

        if (is_null($storeExternalgroupid)) {
            throw new \InvalidArgumentException('non-nullable storeExternalgroupid cannot be null');
        }

        $this->container['storeExternalgroupid'] = $storeExternalgroupid;

        return $this;
    }

    /**
     * Gets storeName
     *
     * @return string|null
     */
    public function getStoreName()
    {
        return $this->container['storeName'];
    }

    /**
     * Sets storeName
     *
     * @param string|null $storeName Name of the store where the purchase was made
     *
     * @return self
     */
    public function setStoreName($storeName)
    {

        if (is_null($storeName)) {
            throw new \InvalidArgumentException('non-nullable storeName cannot be null');
        }

        $this->container['storeName'] = $storeName;

        return $this;
    }

    /**
     * Gets voyadoContactid
     *
     * @return string|null
     */
    public function getVoyadoContactid()
    {
        return $this->container['voyadoContactid'];
    }

    /**
     * Sets voyadoContactid
     *
     * @param string|null $voyadoContactid Contact ID from Voyado for the customer that made the purchase
     *
     * @return self
     */
    public function setVoyadoContactid($voyadoContactid)
    {

        if (is_null($voyadoContactid)) {
            throw new \InvalidArgumentException('non-nullable voyadoContactid cannot be null');
        }

        $this->container['voyadoContactid'] = $voyadoContactid;

        return $this;
    }

    /**
     * Gets voyadoMembernumber
     *
     * @return string|null
     */
    public function getVoyadoMembernumber()
    {
        return $this->container['voyadoMembernumber'];
    }

    /**
     * Sets voyadoMembernumber
     *
     * @param string|null $voyadoMembernumber Member Number from Voyado for the customer that made the purchase
     *
     * @return self
     */
    public function setVoyadoMembernumber($voyadoMembernumber)
    {

        if (is_null($voyadoMembernumber)) {
            throw new \InvalidArgumentException('non-nullable voyadoMembernumber cannot be null');
        }

        $this->container['voyadoMembernumber'] = $voyadoMembernumber;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return (string)json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


